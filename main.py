import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, PhotoSize, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from keyboards.user_keyboards import builder

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

logger = logging.getLogger("httpx")
logger.setLevel(logging.WARNING)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7783836620:AAEKekan25gE2N6UOw3_xMWaHDVUSEh_Gc0")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

router = Router()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("WAGNER ‚Äî –¢–í–û–ô –í–´–°–û–ö–û–¢–ï–•–ù–û–õ–û–ì–ò–ß–ù–´–ô –ü–û–ú–û–©–ù–ò–ö –í –ú–ò–†–ï –û–ö–†–ê–°–ö–ò! üöÄ\n\n"
                        "¬´–ù–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–º ‚Äî —Å–æ–∑–¥–∞—ë–º —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ!¬ª",

                         reply_markup=builder.as_markup())


@dp.callback_query(F.data == "catalog")
async def handle_catalog(callback: types.CallbackQuery, state: FSMContext):
    try:
        # 1. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
        await callback.answer()

        # 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–µ—Å–ª–∏ –±—ã–ª–æ)
        await state.clear()

        # 3. –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞
        builder = InlineKeyboardBuilder()

        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥)
        builder.row(
            types.InlineKeyboardButton(
                text="üîß –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
                callback_data="catalog:pro"
            ),
            types.InlineKeyboardButton(
                text="üè† –ë—ã—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è",
                callback_data="catalog:home"
            ),
            types.InlineKeyboardButton(
                text="üè≠ –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
                callback_data="catalog:industrial"
            ),
            width=1  # –ü–æ 1 –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
        )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        builder.row(
            types.InlineKeyboardButton(
                text="üîç –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É",
                switch_inline_query_current_chat=""
            ),
            types.InlineKeyboardButton(
                text="üìö PDF-–∫–∞—Ç–∞–ª–æ–≥",
                url="https://wagner.com/catalog.pdf"
            )
        )

        # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
        await callback.message.edit_text(
            text="<b>üèó –ö–∞—Ç–∞–ª–æ–≥ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Wagner</b>\n\n"
                 "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:",
            reply_markup=builder.as_markup(),
            parse_mode="HTML"
        )

        # 5. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
        await state.set_state(CatalogStates.viewing_catalog)
        await state.update_data(last_message_id=callback.message.message_id)

    except Exception as e:
        logger.error(f"Catalog error: {e}")
        await callback.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")




# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())